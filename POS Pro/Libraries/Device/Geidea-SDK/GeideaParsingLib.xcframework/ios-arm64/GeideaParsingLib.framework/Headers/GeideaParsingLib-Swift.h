// Generated by Apple Swift version 5.4 effective-4.1.50 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef GEIDEAPARSINGLIB_SWIFT_H
#define GEIDEAPARSINGLIB_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GeideaParsingLib",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@protocol GeideaTCPDelegate;
@class NSString;
@class NSNumber;

SWIFT_CLASS("_TtC16GeideaParsingLib20GeideaParsingManager")
@interface GeideaParsingManager : NSObject
@property (nonatomic, strong) id <GeideaTCPDelegate> _Null_unspecified delegate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GeideaParsingManager * _Nonnull shared;)
+ (GeideaParsingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull hostAddress;
@property (nonatomic) NSInteger port;
@property (nonatomic) BOOL uploadLogs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)PaymentWithAmount:(NSString * _Nonnull)amount;
- (void)Reconciliation;
@end

@class Transaction;
@class Reconciliation;

SWIFT_PROTOCOL("_TtP16GeideaParsingLib17GeideaTCPDelegate_")
@protocol GeideaTCPDelegate
- (void)transactionResponseHTML:(NSString * _Nonnull)htmlString;
- (void)transactionResponseJSON:(Transaction * _Nonnull)jsonResponse;
- (void)reconciliationResponseHTML:(NSString * _Nonnull)htmlString;
- (void)reconciliationResponseJSON:(Reconciliation * _Nonnull)jsonResponse;
- (void)updateStatusWithMessage:(NSString * _Nonnull)message;
- (void)didFailWithError:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage;
@end


SWIFT_CLASS("_TtC16GeideaParsingLib21HostSchemaTransaction")
@interface HostSchemaTransaction : NSObject
@property (nonatomic, copy) NSString * _Nonnull CardSchemeEn;
@property (nonatomic, copy) NSString * _Nonnull authCount;
@property (nonatomic, copy) NSString * _Nonnull totalDBCount;
@property (nonatomic, copy) NSString * _Nonnull totalCRCount;
@property (nonatomic, copy) NSString * _Nonnull cADVAmount;
@property (nonatomic, copy) NSString * _Nonnull totalDBAmount;
@property (nonatomic, copy) NSString * _Nonnull totalCRAmount;
@property (nonatomic, copy) NSString * _Nonnull nAQDRAmount;
@property (nonatomic, copy) NSString * _Nonnull totalsCount;
@property (nonatomic, copy) NSString * _Nonnull totalsAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC16GeideaParsingLib28POSTerminalDetailTransaction")
@interface POSTerminalDetailTransaction : NSObject
@property (nonatomic, copy) NSString * _Nonnull pOFFCount;
@property (nonatomic, copy) NSString * _Nonnull pOFFAmount;
@property (nonatomic, copy) NSString * _Nonnull pONCount;
@property (nonatomic, copy) NSString * _Nonnull pONAmount;
@property (nonatomic, copy) NSString * _Nonnull pURNAQDCount;
@property (nonatomic, copy) NSString * _Nonnull pURNAQDAmount;
@property (nonatomic, copy) NSString * _Nonnull reversalCount;
@property (nonatomic, copy) NSString * _Nonnull reversalAmount;
@property (nonatomic, copy) NSString * _Nonnull refundCount;
@property (nonatomic, copy) NSString * _Nonnull completionCount;
@property (nonatomic, copy) NSString * _Nonnull completionAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16GeideaParsingLib22POSTerminalTransaction")
@interface POSTerminalTransaction : NSObject
@property (nonatomic, copy) NSString * _Nonnull totalDBCount;
@property (nonatomic, copy) NSString * _Nonnull totalDBAmount;
@property (nonatomic, copy) NSString * _Nonnull totalCRCount;
@property (nonatomic, copy) NSString * _Nonnull totalCRAmount;
@property (nonatomic, copy) NSString * _Nonnull nAQDRAmount;
@property (nonatomic, copy) NSString * _Nonnull cADVAmount;
@property (nonatomic, copy) NSString * _Nonnull authCount;
@property (nonatomic, copy) NSString * _Nonnull totalsCount;
@property (nonatomic, copy) NSString * _Nonnull totalsAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

enum ReconciliationStatus : NSInteger;

SWIFT_CLASS("_TtC16GeideaParsingLib14Reconciliation")
@interface Reconciliation : NSObject
@property (nonatomic, copy) NSString * _Nonnull TransactionDate;
@property (nonatomic, copy) NSString * _Nonnull TransactionTime;
@property (nonatomic, copy) NSString * _Nonnull TerminalID;
@property (nonatomic, copy) NSString * _Nonnull POSVersionNumber;
@property (nonatomic) enum ReconciliationStatus reconciliationStatus;
@property (nonatomic, copy) NSString * _Nonnull ReconciliationStatusAr;
@property (nonatomic, copy) NSString * _Nonnull ReconciliationStatusEn;
@property (nonatomic, copy) NSString * _Nonnull UnsucessfulReasonEn;
@property (nonatomic, copy) NSString * _Nonnull UnsucessfulReasonAr;
@property (nonatomic, copy) NSString * _Nonnull SystemsTraceAuditNumber;
@property (nonatomic, copy) NSString * _Nonnull MerchantNameAr;
@property (nonatomic, copy) NSString * _Nonnull MerchantNameEn;
@property (nonatomic, copy) NSString * _Nonnull addressAr;
@property (nonatomic, copy) NSString * _Nonnull addressEn;
@property (nonatomic, copy) NSString * _Nonnull BankID;
@property (nonatomic, copy) NSString * _Nonnull CardAcceptorBusinessCode;
@property (nonatomic, copy) NSString * _Nonnull MerchantID;
@property (nonatomic, copy) NSString * _Nonnull TransactionDueDate;
@property (nonatomic, copy) NSString * _Nonnull TransactionDueTime;
@property (nonatomic, copy) NSString * _Nonnull hostResponseCode;
@property (nonatomic) NSInteger rowsCount;
@property (nonatomic, copy) NSArray<POSTerminalDetailTransaction *> * _Nonnull posTerminalDetailsSchemaArray;
@property (nonatomic, copy) NSArray<HostSchemaTransaction *> * _Nonnull hostSchemaArray;
@property (nonatomic, copy) NSArray<POSTerminalTransaction *> * _Nonnull posTerminalSchemaArray;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull cardSchemeDict;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ReconciliationStatus, open) {
  ReconciliationStatusSuccessful = 0,
  ReconciliationStatusUnsucessful = 1,
};

enum TransactionStatus : NSInteger;
@class UIImage;

SWIFT_CLASS("_TtC16GeideaParsingLib11Transaction")
@interface Transaction : NSObject
@property (nonatomic, copy) NSString * _Nonnull transactionDate;
@property (nonatomic, copy) NSString * _Nonnull transactionTime;
@property (nonatomic, copy) NSString * _Nonnull bankID;
@property (nonatomic, copy) NSString * _Nonnull merchantID;
@property (nonatomic, copy) NSString * _Nonnull terminalID;
@property (nonatomic, copy) NSString * _Nonnull merchantNameAr;
@property (nonatomic, copy) NSString * _Nonnull merchantNameEn;
@property (nonatomic, copy) NSString * _Nonnull addressAr;
@property (nonatomic, copy) NSString * _Nonnull addressEn;
@property (nonatomic, copy) NSString * _Nonnull cardAcceptorBusinessCode;
@property (nonatomic, copy) NSString * _Nonnull systemsTraceAuditNumber;
@property (nonatomic, copy) NSString * _Nonnull pOSVersionNumber;
@property (nonatomic, copy) NSString * _Nonnull retrievalReferenceNumber;
@property (nonatomic, copy) NSString * _Nonnull cardSchemeAr;
@property (nonatomic, copy) NSString * _Nonnull cardSchemeEn;
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull expiryDate;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountAr;
@property (nonatomic) enum TransactionStatus transactionStatus;
@property (nonatomic, copy) NSString * _Nonnull transactionStatusEn;
@property (nonatomic, copy) NSString * _Nonnull transactionStatusAr;
@property (nonatomic, copy) NSString * _Nonnull pinVerifiedStatusEn;
@property (nonatomic, copy) NSString * _Nonnull pinVerifiedStatusAr;
@property (nonatomic, copy) NSString * _Nonnull amountDebitMsgEn;
@property (nonatomic, copy) NSString * _Nonnull amountDebitMsgAr;
@property (nonatomic, copy) NSString * _Nonnull approvalCodeAr;
@property (nonatomic, copy) NSString * _Nonnull approvalCodeEn;
@property (nonatomic, copy) NSString * _Nonnull transactionDueDate;
@property (nonatomic, copy) NSString * _Nonnull transactionDueTime;
@property (nonatomic, copy) NSString * _Nonnull iD1;
@property (nonatomic, copy) NSString * _Nonnull tVR;
@property (nonatomic, copy) NSString * _Nonnull tSI;
@property (nonatomic, copy) NSString * _Nonnull crytogramResult;
@property (nonatomic, copy) NSString * _Nonnull cVMResult;
@property (nonatomic, copy) NSString * _Nonnull applicationCryt;
@property (nonatomic, copy) NSString * _Nonnull customerCopyTitleAr;
@property (nonatomic, copy) NSString * _Nonnull customerCopyTitleEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseLabelEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseLabelAr;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountLabelEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountLabelAr;
@property (nonatomic, copy) NSString * _Nonnull approvalLabelEn;
@property (nonatomic, copy) NSString * _Nonnull approvalLabelAr;
@property (nonatomic, copy) NSString * _Nonnull dipped;
@property (nonatomic, copy) NSString * _Nonnull hostResponseCode;
@property (nonatomic, copy) NSString * _Nonnull qrString;
@property (nonatomic, copy) NSString * _Nonnull campaign_message_ar;
@property (nonatomic, copy) NSString * _Nonnull campaign_message_en;
@property (nonatomic, strong) UIImage * _Nullable qrCodeImage;
@property (nonatomic, copy) NSString * _Nonnull clKernalID;
@property (nonatomic, copy) NSString * _Nonnull clPAR;
@property (nonatomic, copy) NSString * _Nonnull clFPAN_Suffix;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nullable)entityInfo OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TransactionStatus, open) {
  TransactionStatusApproved = 0,
  TransactionStatusDeclined = 1,
};














#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
