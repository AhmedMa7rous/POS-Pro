// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef GEIDEAMPOSLIB_SWIFT_H
#define GEIDEAMPOSLIB_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GeideaMPOSLib",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class NSNumber;
@class NSError;
@class UserInfo;
@class NSString;
@class MPOSTransaction;
@class MPOSReconciliation;

SWIFT_PROTOCOL("_TtP13GeideaMPOSLib18GeideaMPOSDelegate_")
@protocol GeideaMPOSDelegate
- (void)mposAuthDidFinished:(BOOL)status error:(NSError * _Nullable)error userInfo:(UserInfo * _Nullable)userInfo;
- (void)mposTransactionResponseHTML:(NSString * _Nonnull)htmlString;
- (void)mposTransactionResponseJSON:(MPOSTransaction * _Nonnull)jsonResponse;
- (void)mposReconciliationResponseHTML:(NSString * _Nonnull)htmlString;
- (void)mposReconciliationResponseJSON:(MPOSReconciliation * _Nonnull)jsonResponse;
- (void)mposDidFailWithError:(NSInteger)errorCode errorMessage:(NSString * _Nonnull)errorMessage;
@end

@class UIImage;
@class NSDate;
@class TransactionRecord;

SWIFT_CLASS("_TtC13GeideaMPOSLib17GeideaMposManager")
@interface GeideaMposManager : NSObject
@property (nonatomic, strong) id <GeideaMPOSDelegate> _Nullable delegate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GeideaMposManager * _Nonnull shared;)
+ (GeideaMposManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIImage * _Nullable popupImage;
@property (nonatomic) uint32_t popupColorStyle;
@property (nonatomic) uint32_t popupColorTextButton;
@property (nonatomic, readonly) BOOL isConnected;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initalize:(NSString * _Nonnull)appID withAppSecret:(NSString * _Nonnull)withAppSecret;
- (void)showFindDevices;
- (void)startPaymentWithAmount:(double)amount;
- (void)startPaymentWithAmount:(double)amount referenceNumber:(NSString * _Nonnull)referenceNumber;
- (void)reconciliation;
- (void)disconnect;
- (NSString * _Nullable)getTerminalID SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)getAutoReconciliationTime SWIFT_WARN_UNUSED_RESULT;
- (double)getMYPerTrxLimit SWIFT_WARN_UNUSED_RESULT;
- (void)uploadLogs;
- (NSArray<TransactionRecord *> * _Nullable)getAllTransactions SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13GeideaMPOSLib21HostSchemaTransaction")
@interface HostSchemaTransaction : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified CardSchemeEn;
@property (nonatomic, copy) NSString * _Null_unspecified authCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalDBCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalCRCount;
@property (nonatomic, copy) NSString * _Null_unspecified cADVAmount;
@property (nonatomic, copy) NSString * _Null_unspecified totalDBAmount;
@property (nonatomic, copy) NSString * _Null_unspecified totalCRAmount;
@property (nonatomic, copy) NSString * _Null_unspecified nAQDRAmount;
@property (nonatomic, copy) NSString * _Null_unspecified totalsCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalsAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum ReconciliationStatus : NSInteger;
@class POSTerminalDetailTransaction;
@class POSTerminalTransaction;

SWIFT_CLASS("_TtC13GeideaMPOSLib18MPOSReconciliation")
@interface MPOSReconciliation : NSObject
@property (nonatomic, copy) NSString * _Nullable TransactionDate;
@property (nonatomic, copy) NSString * _Nullable TransactionTime;
@property (nonatomic, copy) NSString * _Nullable TerminalID;
@property (nonatomic, copy) NSString * _Nullable POSVersionNumber;
@property (nonatomic) enum ReconciliationStatus reconciliationStatus;
@property (nonatomic, copy) NSString * _Nullable ReconciliationStatusAr;
@property (nonatomic, copy) NSString * _Nullable ReconciliationStatusEn;
@property (nonatomic, copy) NSString * _Nonnull UnsucessfulReasonEn;
@property (nonatomic, copy) NSString * _Nonnull UnsucessfulReasonAr;
@property (nonatomic, copy) NSString * _Nullable SystemsTraceAuditNumber;
@property (nonatomic, copy) NSString * _Nullable MerchantNameAr;
@property (nonatomic, copy) NSString * _Nullable MerchantNameEn;
@property (nonatomic, copy) NSString * _Nullable AddressAr;
@property (nonatomic, copy) NSString * _Nullable AddressEn;
@property (nonatomic, copy) NSString * _Nullable BankID;
@property (nonatomic, copy) NSString * _Nullable CardAcceptorBusinessCode;
@property (nonatomic, copy) NSString * _Nullable MerchantID;
@property (nonatomic, copy) NSString * _Nullable TransactionDueDate;
@property (nonatomic, copy) NSString * _Nullable TransactionDueTime;
@property (nonatomic, copy) NSString * _Nullable hostResponseCode;
@property (nonatomic) NSInteger rowsCount;
@property (nonatomic, copy) NSArray<POSTerminalDetailTransaction *> * _Nonnull posTerminalDetailsSchemaArray;
@property (nonatomic, copy) NSArray<HostSchemaTransaction *> * _Nonnull hostSchemaArray;
@property (nonatomic, copy) NSArray<POSTerminalTransaction *> * _Nonnull posTerminalSchemaArray;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull cardSchemeDict;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TransactionStatus : NSInteger;

SWIFT_CLASS("_TtC13GeideaMPOSLib15MPOSTransaction")
@interface MPOSTransaction : NSObject
@property (nonatomic, copy) NSString * _Nonnull transactionDate;
@property (nonatomic, copy) NSString * _Nonnull transactionTime;
@property (nonatomic, copy) NSString * _Nonnull bankID;
@property (nonatomic, copy) NSString * _Nonnull merchantID;
@property (nonatomic, copy) NSString * _Nonnull terminalID;
@property (nonatomic, copy) NSString * _Nonnull merchantNameAr;
@property (nonatomic, copy) NSString * _Nonnull merchantNameEn;
@property (nonatomic, copy) NSString * _Nonnull addressAr;
@property (nonatomic, copy) NSString * _Nonnull addressEn;
@property (nonatomic, copy) NSString * _Nonnull cardAcceptorBusinessCode;
@property (nonatomic, copy) NSString * _Nonnull systemsTraceAuditNumber;
@property (nonatomic, copy) NSString * _Nonnull pOSVersionNumber;
@property (nonatomic, copy) NSString * _Nonnull retrievalReferenceNumber;
@property (nonatomic, copy) NSString * _Nonnull cardSchemeAr;
@property (nonatomic, copy) NSString * _Nonnull cardSchemeEn;
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull expiryDate;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountAr;
@property (nonatomic) enum TransactionStatus transactionStatus;
@property (nonatomic, copy) NSString * _Nonnull transactionStatusEn;
@property (nonatomic, copy) NSString * _Nonnull transactionStatusAr;
@property (nonatomic, copy) NSString * _Nonnull pinVerifiedStatusEn;
@property (nonatomic, copy) NSString * _Nonnull pinVerifiedStatusAr;
@property (nonatomic, copy) NSString * _Nonnull amountDebitMsgEn;
@property (nonatomic, copy) NSString * _Nonnull amountDebitMsgAr;
@property (nonatomic, copy) NSString * _Nonnull approvalCodeAr;
@property (nonatomic, copy) NSString * _Nonnull approvalCodeEn;
@property (nonatomic, copy) NSString * _Nonnull transactionDueDate;
@property (nonatomic, copy) NSString * _Nonnull transactionDueTime;
@property (nonatomic, copy) NSString * _Nonnull iD1;
@property (nonatomic, copy) NSString * _Nonnull tVR;
@property (nonatomic, copy) NSString * _Nonnull tSI;
@property (nonatomic, copy) NSString * _Nonnull crytogramResult;
@property (nonatomic, copy) NSString * _Nonnull cVMResult;
@property (nonatomic, copy) NSString * _Nonnull applicationCryt;
@property (nonatomic, copy) NSString * _Nonnull kernelId;
@property (nonatomic, copy) NSString * _Nonnull paymentAccountReference;
@property (nonatomic, copy) NSString * _Nonnull fundingPAN;
@property (nonatomic, copy) NSString * _Nonnull customerCopyTitleAr;
@property (nonatomic, copy) NSString * _Nonnull customerCopyTitleEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseLabelEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseLabelAr;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountLabelEn;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmountLabelAr;
@property (nonatomic, copy) NSString * _Nonnull approvalLabelEn;
@property (nonatomic, copy) NSString * _Nonnull approvalLabelAr;
@property (nonatomic, copy) NSString * _Nonnull dipped;
@property (nonatomic, copy) NSString * _Nonnull hostResponseCode;
@property (nonatomic, copy) NSString * _Nonnull qrString;
@property (nonatomic, copy) NSString * _Nonnull campaign_message_ar;
@property (nonatomic, copy) NSString * _Nonnull campaign_message_en;
@property (nonatomic, strong) UIImage * _Nullable qrCodeImage;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





SWIFT_CLASS("_TtC13GeideaMPOSLib28POSTerminalDetailTransaction")
@interface POSTerminalDetailTransaction : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified pOFFCount;
@property (nonatomic, copy) NSString * _Null_unspecified pOFFAmount;
@property (nonatomic, copy) NSString * _Null_unspecified pONCount;
@property (nonatomic, copy) NSString * _Null_unspecified pONAmount;
@property (nonatomic, copy) NSString * _Null_unspecified pURNAQDCount;
@property (nonatomic, copy) NSString * _Null_unspecified pURNAQDAmount;
@property (nonatomic, copy) NSString * _Null_unspecified reversalCount;
@property (nonatomic, copy) NSString * _Null_unspecified reversalAmount;
@property (nonatomic, copy) NSString * _Null_unspecified refundCount;
@property (nonatomic, copy) NSString * _Null_unspecified completionCount;
@property (nonatomic, copy) NSString * _Null_unspecified completionAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13GeideaMPOSLib22POSTerminalTransaction")
@interface POSTerminalTransaction : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified totalDBCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalDBAmount;
@property (nonatomic, copy) NSString * _Null_unspecified totalCRCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalCRAmount;
@property (nonatomic, copy) NSString * _Null_unspecified nAQDRAmount;
@property (nonatomic, copy) NSString * _Null_unspecified cADVAmount;
@property (nonatomic, copy) NSString * _Null_unspecified authCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalsCount;
@property (nonatomic, copy) NSString * _Null_unspecified totalsAmount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("ReconciliationHistory")
@interface ReconciliationHistory : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class User;

@interface ReconciliationHistory (SWIFT_EXTENSION(GeideaMPOSLib))
@property (nonatomic, copy) NSString * _Nullable buffer;
@property (nonatomic, copy) NSDate * _Nullable dateTime;
@property (nonatomic) BOOL gSdkUploadStatus;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable merchantDetails;
@property (nonatomic, copy) NSString * _Nullable merchantID;
@property (nonatomic, copy) NSString * _Nullable terminalID;
@property (nonatomic) BOOL uploadStatus;
@property (nonatomic, strong) User * _Nullable user;
@end

typedef SWIFT_ENUM(NSInteger, ReconciliationStatus, open) {
  ReconciliationStatusSuccessful = 0,
  ReconciliationStatusUnsucessful = 1,
};

@class NSCoder;
@class NSBundle;
@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC13GeideaMPOSLib12SCLAlertView")
@interface SCLAlertView : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)updateShowTimeout;
- (void)hideView;
- (void)hideViewTimeout;
@end



SWIFT_CLASS("_TtC13GeideaMPOSLib9SCLButton")
@interface SCLButton : UIButton
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TransactionHistory")
@interface TransactionHistory : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface TransactionHistory (SWIFT_EXTENSION(GeideaMPOSLib))
@property (nonatomic, copy) NSString * _Nullable aID;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable applicationCrypt;
@property (nonatomic, copy) NSString * _Nullable authResponseCode;
@property (nonatomic, copy) NSString * _Nullable bankID;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, copy) NSString * _Nullable cardSystemTime;
@property (nonatomic, copy) NSString * _Nullable cryptResult;
@property (nonatomic, copy) NSString * _Nullable customerDetails;
@property (nonatomic, copy) NSString * _Nullable customerDetailsBuffer;
@property (nonatomic, copy) NSString * _Nullable customerEmail;
@property (nonatomic, copy) NSString * _Nullable customerPhoneNumber;
@property (nonatomic, copy) NSString * _Nullable customerSignatureBuffer;
@property (nonatomic, copy) NSString * _Nullable cVR;
@property (nonatomic, copy) NSDate * _Nullable dateTime;
@property (nonatomic, copy) NSString * _Nullable dateTimeForDisplay;
@property (nonatomic, copy) NSString * _Nullable ecr;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable functionCode;
@property (nonatomic) BOOL gSdkUploadStatus;
@property (nonatomic, copy) NSString * _Nullable hostBuffer;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable labelName;
@property (nonatomic, copy) NSString * _Nullable merchantCategoryCode;
@property (nonatomic, copy) NSString * _Nullable merchantID;
@property (nonatomic, copy) NSString * _Nullable merchantNumber;
@property (nonatomic, copy) NSString * _Nullable merchantPingBuffer;
@property (nonatomic, copy) NSString * _Nullable messageReasonCode;
@property (nonatomic, copy) NSString * _Nullable pingBuffer;
@property (nonatomic) BOOL pingUploadStatus;
@property (nonatomic, copy) NSString * _Nullable pOSEntryMode;
@property (nonatomic, copy) NSString * _Nullable pOSServiceCode;
@property (nonatomic, copy) NSString * _Nullable reconciliationBuffer;
@property (nonatomic, copy) NSString * _Nullable reconciliationID;
@property (nonatomic, copy) NSString * _Nullable remark;
@property (nonatomic, copy) NSString * _Nullable requestDateTimeForDisplay;
@property (nonatomic, copy) NSString * _Nullable responseBuffer;
@property (nonatomic, copy) NSString * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable responseDateTime;
@property (nonatomic, copy) NSString * _Nullable rRN;
@property (nonatomic, copy) NSString * _Nullable schemeID;
@property (nonatomic, copy) NSString * _Nullable serialNumber;
@property (nonatomic, copy) NSString * _Nullable softwareVersion;
@property (nonatomic, copy) NSString * _Nullable sTAN;
@property (nonatomic, copy) NSString * _Nullable systemTime;
@property (nonatomic, copy) NSString * _Nullable terminalBuffer;
@property (nonatomic, copy) NSString * _Nullable terminalID;
@property (nonatomic, copy) NSString * _Nullable tipAmount;
@property (nonatomic, copy) NSString * _Nullable totalAmount;
@property (nonatomic, copy) NSString * _Nullable transactionMerchantPingBuffer;
@property (nonatomic, copy) NSString * _Nullable transactionNo;
@property (nonatomic, copy) NSString * _Nullable transactionPingBuffer;
@property (nonatomic, copy) NSString * _Nullable transactionRemark;
@property (nonatomic, copy) NSString * _Nullable transactionRequestDate_Time;
@property (nonatomic, copy) NSString * _Nullable transactionRequestDateTime;
@property (nonatomic, copy) NSString * _Nullable transactionStatus;
@property (nonatomic, copy) NSString * _Nullable transactiontype;
@property (nonatomic, copy) NSString * _Nullable tSI;
@property (nonatomic, copy) NSString * _Nullable tVR;
@property (nonatomic) BOOL uploadStatus;
@property (nonatomic, copy) NSString * _Nullable verificationMethod;
@property (nonatomic, strong) User * _Nullable user;
@end


SWIFT_CLASS("_TtC13GeideaMPOSLib17TransactionRecord")
@interface TransactionRecord : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull transactiontype;
@property (nonatomic, copy) NSString * _Nonnull dateTime;
@property (nonatomic, copy) NSString * _Nonnull purchaseAmount;
@property (nonatomic, copy) NSString * _Nonnull ecrRefrenceNumber;
@property (nonatomic, copy) NSString * _Nonnull transactionStatus;
@property (nonatomic, copy) NSString * _Nonnull bankID;
@property (nonatomic, copy) NSString * _Nonnull merchantID;
@property (nonatomic, copy) NSString * _Nonnull terminalID;
@property (nonatomic, copy) NSString * _Nonnull cardAcceptorBusinessCode;
@property (nonatomic, copy) NSString * _Nonnull retrievalReferenceNumber;
@property (nonatomic, copy) NSString * _Nonnull pOSVersionNumber;
@property (nonatomic, copy) NSString * _Nonnull schemeID;
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull expiryDate;
@property (nonatomic, copy) NSString * _Nonnull verificationMethod;
@property (nonatomic, copy) NSString * _Nonnull authResponseCode;
@property (nonatomic, copy) NSString * _Nonnull responseDateTime;
@property (nonatomic, copy) NSString * _Nonnull serialNumber;
@property (nonatomic, copy) NSString * _Nonnull entryMode;
@property (nonatomic, copy) NSString * _Nonnull hostResponseCode;
@property (nonatomic, copy) NSString * _Nonnull labelName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TransactionStatus, open) {
  TransactionStatusApproved = 0,
  TransactionStatusDeclined = 1,
  TransactionStatusOfflineApproved = 2,
};















SWIFT_CLASS_NAMED("User")
@interface User : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface User (SWIFT_EXTENSION(GeideaMPOSLib))
- (void)addTransactionHistoryObject:(TransactionHistory * _Nonnull)value;
- (void)removeTransactionHistoryObject:(TransactionHistory * _Nonnull)value;
- (void)addTransactionHistory:(NSSet * _Nonnull)values;
- (void)removeTransactionHistory:(NSSet * _Nonnull)values;
@end


@interface User (SWIFT_EXTENSION(GeideaMPOSLib))
@property (nonatomic, copy) NSString * _Nullable address;
@property (nonatomic, copy) NSDate * _Nullable autoReconciliationDateTime;
@property (nonatomic, copy) NSString * _Nullable autoReconciliationTime;
@property (nonatomic, copy) NSDate * _Nullable autoRemoteDownloadDateTime;
@property (nonatomic) BOOL forcedTMSTransfer;
@property (nonatomic, copy) NSString * _Nullable fullTerminalID;
@property (nonatomic, copy) NSString * _Nullable govTax;
@property (nonatomic, copy) NSString * _Nullable isGSDK;
@property (nonatomic, copy) NSString * _Nullable merchantID;
@property (nonatomic, copy) NSString * _Nullable merchantName;
@property (nonatomic) BOOL notificationStatus;
@property (nonatomic) float perTransactionLimit;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic, copy) NSString * _Nullable posSecrectCode;
@property (nonatomic, copy) NSString * _Nullable serviceCharge;
@property (nonatomic, copy) NSString * _Nullable terminalID;
@property (nonatomic, copy) NSString * _Nullable tmsVersion;
@property (nonatomic, copy) NSString * _Nullable tokenType;
@property (nonatomic, copy) NSString * _Nullable userEmail;
@property (nonatomic, copy) NSString * _Nullable userID;
@property (nonatomic, copy) NSString * _Nullable userPhone;
@property (nonatomic, copy) NSString * _Nullable userStatus;
@property (nonatomic, strong) ReconciliationHistory * _Nullable reconciliationHistory;
@property (nonatomic, strong) NSSet * _Nullable transactionHistory;
@end


SWIFT_CLASS("_TtC13GeideaMPOSLib8UserInfo")
@interface UserInfo : NSObject
@property (nonatomic) BOOL status;
@property (nonatomic) double perTrxLimit;
@property (nonatomic) double perdayTrxLimit;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull govTax;
@property (nonatomic, copy) NSString * _Nonnull merchantName;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, copy) NSString * _Nonnull serviceCharge;
@property (nonatomic, copy) NSString * _Nonnull terminalId;
@property (nonatomic, copy) NSString * _Nonnull userEmail;
@property (nonatomic, copy) NSString * _Nonnull userPhone;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
